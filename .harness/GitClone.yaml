pipeline:
  name: Git-Clone
  identifier: GitClone
  projectIdentifier: CI
  orgIdentifier: default
  tags:
    kartikeya: ""
  stages:
    - stage:
        name: Git-Clone
        identifier: GitClone
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: RunName
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: |-
                      docker pull nginx:latest
                      docker run --name my-nginx -p 8080:80 -d nginx:latest
                      docker ps
                      docker logs my-nginx
                    envVariables:
                      IMAGE_TAG: <+stage.variables.VERSION>,latest
                  timeout: 1d 1h
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          sharedPaths:
            - /tmp/shared
            - /var/run
        variables:
          - name: VERSION
            type: String
            description: ""
            required: false
            value: <+"0.0.1-"+<+pipeline.sequenceId>>
  variables:
    - name: test1
      type: String
      description: ""
      required: false
      value: test2
  properties:
    ci:
      codebase:
        connectorRef: account.GitHub
        repoName: CI-Usecases
        build: <+input>
        sparseCheckout: []
  allowStageExecutions: true
